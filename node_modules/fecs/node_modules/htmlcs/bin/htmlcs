#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var walk = require('walk');
var htmlcs = require('../');
var info = require('../package.json');

var op = 'help';
var target = '';

var defaultOp = 'hint';

if (process.argv.length > 3) {
    op = process.argv[2];
    target = process.argv[3];
}
else {
    op = defaultOp;
    target = process.argv[2] || './';
}

var hintFile = function (filePath) {
    htmlcs.hintFile(filePath).forEach(function (item) {
        console.log('[%s] line %d, column %d: %s (%s, %s)', item.type, item.line, item.column, item.message, item.rule, item.code);
    });
};

try {
    switch (op) {

        case 'hint':

            var stat = fs.statSync(target);

            if (stat.isFile()) {
                hintFile(target);
                return;
            }

            if (stat.isDirectory()) {
                var walker = walk.walk(target);

                walker.on('file', function (root, fileStat, next) {
                    var filePath = path.join(root, fileStat.name);

                    if (filePath.slice(-5) !== '.html') {
                        next();
                        return;
                    }

                    console.log('*', filePath + ':\n');
                    hintFile(filePath);
                    console.log('\n');
                    next();
                });

                return;
            }

            return;

        case 'format':

            console.log(htmlcs.formatFile(target));
            return;

        default:
    }
}
catch (e) {
    console.log('Error:', e.message || e);
    console.log([
        '',
        ['Usage:'],
        ['\thtmlcs', 'hint', '<file>'],
        ['\thtmlcs', 'hint', '<folder>'],
        ['\thtmlcs', 'format', '<file>']
    ].map(function (line) {
        return line && line.join(' ');
    }).join('\n'));
}
